{
    "api_version": "v1",
    "base_url": "http://localhost:8000/api",
    "authentication": {
        "type": "Bearer Token",
        "header": "Authorization: Bearer {token}"
    },
    "routes": {
        "auth": {
            "register": {
                "url": "/register",
                "method": "POST",
                "protected": false,
                "description": "Register a new user",
                "parameters": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "User's full name"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "unique": "users,email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "min": 8,
                        "description": "User's password"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "required": true,
                        "description": "Must match password field"
                    },
                    "phone": {
                        "type": "string",
                        "required": true,
                        "max": 20,
                        "description": "User's phone number"
                    },
                    "address": {
                        "type": "string",
                        "required": false,
                        "max": 255,
                        "nullable": true,
                        "description": "User's address"
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "returns": {
                            "message": "string",
                            "user": "object",
                            "token": "string"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "returns": {
                            "message": "string",
                            "errors": "object"
                        }
                    }
                }
            },
            "login": {
                "url": "/login",
                "method": "POST",
                "protected": false,
                "description": "Authenticate user and get token",
                "parameters": {
                    "email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "description": "User's password"
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "returns": {
                            "message": "string",
                            "user": "object",
                            "token": "string"
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "returns": {
                            "message": "string",
                            "errors": "object"
                        }
                    }
                }
            },
            "logout": {
                "url": "/logout",
                "method": "POST",
                "protected": true,
                "description": "Invalidate user's token",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "returns": {
                            "message": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "returns": {
                            "message": "string"
                        }
                    }
                }
            },
            "user": {
                "url": "/user",
                "method": "GET",
                "protected": true,
                "description": "Get authenticated user's details",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "returns": {
                            "id": "integer",
                            "name": "string",
                            "email": "string",
                            "phone": "string",
                            "address": "string|null",
                            "is_active": "boolean",
                            "created_at": "timestamp",
                            "updated_at": "timestamp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "returns": {
                            "message": "string"
                        }
                    }
                }
            }
        }
    },
    "error_responses": {
        "401": {
            "description": "Unauthorized - Invalid or missing token",
            "returns": {
                "message": "string"
            }
        },
        "403": {
            "description": "Forbidden - User doesn't have required permissions",
            "returns": {
                "message": "string"
            }
        },
        "404": {
            "description": "Not Found - Resource not found",
            "returns": {
                "message": "string"
            }
        },
        "422": {
            "description": "Unprocessable Entity - Validation failed",
            "returns": {
                "message": "string",
                "errors": "object"
            }
        },
        "500": {
            "description": "Server Error",
            "returns": {
                "message": "string",
                "error": "string"
            }
        }
    }
}
