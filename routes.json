{
    "api_version": "v1",
    "base_url": "http://localhost:8000/api",
    "authentication": {
        "type": "Bearer Token",
        "header": "Authorization: Bearer {token}"
    },
    "routes": {
        "auth": {
            "register": {
                "url": "/register",
                "method": "POST",
                "protected": false,
                "description": "Register a new user",
                "parameters": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "User's full name"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "unique": "users,email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "min": 8,
                        "description": "User's password"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "required": true,
                        "description": "Must match password field"
                    },
                    "phone": {
                        "type": "string",
                        "required": true,
                        "max": 20,
                        "description": "User's phone number"
                    },
                    "address": {
                        "type": "string",
                        "required": false,
                        "max": 255,
                        "nullable": true,
                        "description": "User's address"
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "returns": {
                            "message": "string",
                            "user": "object",
                            "token": "string"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "returns": {
                            "message": "string",
                            "errors": "object"
                        }
                    }
                }
            },
            "login": {
                "url": "/login",
                "method": "POST",
                "protected": false,
                "description": "Authenticate user and get token",
                "parameters": {
                    "email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "description": "User's password"
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "returns": {
                            "message": "string",
                            "user": "object",
                            "token": "string"
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "returns": {
                            "message": "string",
                            "errors": "object"
                        }
                    }
                }
            },
            "logout": {
                "url": "/logout",
                "method": "POST",
                "protected": true,
                "description": "Invalidate user's token",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "returns": {
                            "message": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "returns": {
                            "message": "string"
                        }
                    }
                }
            },
            "user": {
                "url": "/user",
                "method": "GET",
                "protected": true,
                "description": "Get authenticated user's details",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "returns": {
                            "id": "integer",
                            "name": "string",
                            "email": "string",
                            "phone": "string",
                            "address": "string|null",
                            "is_active": "boolean",
                            "created_at": "timestamp",
                            "updated_at": "timestamp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "returns": {
                            "message": "string"
                        }
                    }
                }
            }
        },
        "events": {
            "list": {
                "url": "/events",
                "method": "GET",
                "protected": true,
                "description": "Get list of events with pagination",
                "parameters": {
                    "search": {
                        "type": "string",
                        "required": false,
                        "description": "Search in title, description, and location"
                    },
                    "status": {
                        "type": "boolean",
                        "required": false,
                        "description": "Filter by event status"
                    },
                    "date_from": {
                        "type": "date",
                        "required": false,
                        "format": "Y-m-d",
                        "description": "Filter by start date"
                    },
                    "date_to": {
                        "type": "date",
                        "required": false,
                        "format": "Y-m-d",
                        "description": "Filter by end date"
                    },
                    "per_page": {
                        "type": "integer",
                        "required": false,
                        "default": 10,
                        "description": "Items per page"
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of events",
                        "returns": {
                            "data": "array",
                            "meta": "object"
                        }
                    }
                }
            },
            "create": {
                "url": "/events",
                "method": "POST",
                "protected": true,
                "description": "Create a new event",
                "parameters": {
                    "title": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Event title"
                    },
                    "description": {
                        "type": "string",
                        "required": true,
                        "description": "Event description"
                    },
                    "event_date": {
                        "type": "date",
                        "required": true,
                        "format": "Y-m-d",
                        "description": "Event date"
                    },
                    "event_time": {
                        "type": "time",
                        "required": true,
                        "format": "H:i",
                        "description": "Event time"
                    },
                    "venue": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Event venue"
                    },
                    "image": {
                        "type": "file",
                        "required": false,
                        "mimes": ["jpeg", "png", "jpg"],
                        "max_size": "2048",
                        "description": "Event image"
                    }
                }
            }
        },
        "donations": {
            "list": {
                "url": "/donations",
                "method": "GET",
                "protected": true,
                "description": "Get list of donations",
                "parameters": {
                    "search": {
                        "type": "string",
                        "required": false,
                        "description": "Search in donor name or email"
                    },
                    "status": {
                        "type": "string",
                        "required": false,
                        "enum": ["pending", "completed", "failed"],
                        "description": "Filter by donation status"
                    },
                    "min_amount": {
                        "type": "numeric",
                        "required": false,
                        "description": "Minimum donation amount"
                    },
                    "max_amount": {
                        "type": "numeric",
                        "required": false,
                        "description": "Maximum donation amount"
                    }
                }
            },
            "create": {
                "url": "/donations",
                "method": "POST",
                "protected": true,
                "description": "Create a new donation",
                "parameters": {
                    "amount": {
                        "type": "numeric",
                        "required": true,
                        "min": 1,
                        "description": "Donation amount"
                    },
                    "payment_method": {
                        "type": "string",
                        "required": true,
                        "enum": ["credit_card", "debit_card", "upi"],
                        "description": "Payment method"
                    },
                    "donor_name": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Donor's name"
                    },
                    "donor_email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "description": "Donor's email"
                    }
                }
            }
        },
        "categories": {
            "list": {
                "url": "/categories",
                "method": "GET",
                "protected": true,
                "description": "Get list of categories",
                "parameters": {
                    "search": {
                        "type": "string",
                        "required": false,
                        "description": "Search in category name"
                    }
                }
            },
            "create": {
                "url": "/categories",
                "method": "POST",
                "protected": true,
                "description": "Create a new category",
                "parameters": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Category name"
                    },
                    "description": {
                        "type": "string",
                        "required": false,
                        "description": "Category description"
                    }
                }
            }
        },
        "dashboard": {
            "stats": {
                "url": "/dashboard/stats",
                "method": "GET",
                "protected": true,
                "description": "Get dashboard statistics",
                "parameters": {
                    "date_from": {
                        "type": "date",
                        "required": false,
                        "format": "Y-m-d",
                        "description": "Start date for stats"
                    },
                    "date_to": {
                        "type": "date",
                        "required": false,
                        "format": "Y-m-d",
                        "description": "End date for stats"
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dashboard statistics",
                        "returns": {
                            "total_donations": "numeric",
                            "total_events": "integer",
                            "active_users": "integer",
                            "recent_activities": "array"
                        }
                    }
                }
            }
        },
        "suggestions": {
            "create": {
                "url": "/suggestions",
                "method": "POST",
                "protected": false,
                "description": "Submit a new suggestion",
                "parameters": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Suggester's name"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "validation": "email",
                        "description": "Suggester's email"
                    },
                    "subject": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Suggestion subject"
                    },
                    "message": {
                        "type": "string",
                        "required": true,
                        "description": "Suggestion message"
                    }
                }
            },
            "list": {
                "url": "/suggestions",
                "method": "GET",
                "protected": true,
                "description": "Get list of suggestions (Admin only)",
                "parameters": {
                    "status": {
                        "type": "string",
                        "required": false,
                        "enum": ["new", "read", "archived"],
                        "description": "Filter by suggestion status"
                    }
                }
            }
        },
        "email-templates": {
            "list": {
                "url": "/email-templates",
                "method": "GET",
                "protected": true,
                "description": "Get list of email templates",
                "parameters": {
                    "type": {
                        "type": "string",
                        "required": false,
                        "enum": [
                            "welcome",
                            "donation",
                            "event",
                            "password_reset"
                        ],
                        "description": "Filter by template type"
                    }
                }
            },
            "update": {
                "url": "/email-templates/{id}",
                "method": "PUT",
                "protected": true,
                "description": "Update an email template",
                "parameters": {
                    "subject": {
                        "type": "string",
                        "required": true,
                        "max": 255,
                        "description": "Email subject"
                    },
                    "body": {
                        "type": "string",
                        "required": true,
                        "description": "Email body content (HTML)"
                    },
                    "variables": {
                        "type": "array",
                        "required": false,
                        "description": "Template variables"
                    }
                }
            }
        }
    },
    "error_responses": {
        "401": {
            "description": "Unauthorized - Invalid or missing token",
            "returns": {
                "message": "string"
            }
        },
        "403": {
            "description": "Forbidden - User doesn't have required permissions",
            "returns": {
                "message": "string"
            }
        },
        "404": {
            "description": "Not Found - Resource not found",
            "returns": {
                "message": "string"
            }
        },
        "422": {
            "description": "Unprocessable Entity - Validation failed",
            "returns": {
                "message": "string",
                "errors": "object"
            }
        },
        "500": {
            "description": "Server Error",
            "returns": {
                "message": "string",
                "error": "string"
            }
        }
    }
}
